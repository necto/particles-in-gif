//Number of particles
N = 20;
//Dispersion of velocity in Gaussian distribution
vDisp = 1.;
//coordinates are limited by rectangle: 0 < x < box.x & 0 < y < box.y
box = {x = 100.; y = 100.;};
//Transpass the box to reactor in order to mirror all the particles inside
keepInBox = true;
//The file to store generated coordinates and other options. Default - start.cfg
output="start.cfg";
/*Step of discretization while draw Histogramm of velosity distribution
  if 0 - do not draw anything. Default - 10 */
hist=10;

/**
 *The options transported directly into reactor:
 */
//Potential parameters
rmin = 1.;
rmax = 10.;
A = 0.001;
//Parameters of the second kind of potential
a = 0.1;
b = 0.1;
r0 = 200.0;
//Parameters of the thrid kind of potential (+ r0 from the above)
epsilon = 0.1;
sigma = 0.3;
m = 1.0;
G = 0.7;
//Total simulated time
T = 20.;
//Initial simulated time (just an addition at the beginning,
// affect nothing else)
t0 = 0.;

//Calculate h automatically, for mistake to be less than the
// given deviation. If false, just specify h, and Nstep, for
// routine fixed step calculation with drawing a frame on each
// step=h*Nstep
stepautofit=false;

//Valid only for stepautofit = false:
//{
//Minimal step for simulation progress.
h = 0.05;
//Number of h between two displayed frames
Nstep = 4;
//}


//Valid only for stepautofit = true:
//{
//Maximum acceptable deviation on one simulation step
deviation = 0.0001;
//Time step between frames, dumped into resulting gif file
step = 0.3;
//}

//Width of the output picture in pixels.
//Height is determined by actual particle distribution.
width = 1000;
//A name of the file with final simulation video. Attention: it must end on .gif
rezultFile = "simulation.gif";
//A delay after each simulated frame. "Animation slowness"
// in 1/100th of a second (100 = 1s). Remember, you can also pause animation
// by your viewer(if the latter supports this function)
delay = 10;
//A delay after the last frame, before repetition (100 = 1s)
endDelay = 300;

/*
Filename prefix for dual file output of coordinates and velocities of generated
particles. if abscent or empty, store particles right into the configuration
file "rezultFile" in the old good way :)
otherwise, coordinateds will be saved into <dataFilePrefix>.r.txt,
velosities - <dataFilePrefix>.v.txt
*/
dataFilePrefix="particles";

//A factor of a segment, representing particle velocity. If 0, dont draw
// velocity (carefully, can affect rendering performance)
vScaleFactor=0.;

//Whether the momentum(velocity) distribution should be ballanced.
//If so, aggregated momentum will be zeroed
ballanced=true;

//Whether or not calcualte and print the potential(U), kinatic(K),
// and full(e) energy for each frame.
drawEnergy=false;

//Whether ask user to enter several framenumbers in order to dump
// full information into a State folder
askForSpecificDumps=true;

//Create two special files particles.r<#frame>.txt and particles.v<#frame>.txt
// in State folder, and dump all coordinates and velocites there,
// one requrested frame after another
dumpPointsSeparately=true;

//Beside of drawing points on gif frame, also store them in r.txt and
//v.txt files
dumpPointsOnEachFrame=true;

//Preserve the empty line at the end - requirement of configuration parser
